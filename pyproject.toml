[project]
name = "jobagent"
version = "0.1.0"
description = "A sophisticated, automated job application agent."
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    { name = "Your Name", email = "you@example.com" }
]
keywords = ["job agent", "automation", "fastapi", "celery", "playwright"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "pydantic[email]==2.10.0",
    "sqlmodel==0.0.19",
    "alembic==1.12.1",
    "psycopg2-binary==2.9.9",
    "celery[redis]==5.3.4",
    "redis==4.6.0",
    "openai==1.54.3",
    "playwright==1.40.0",
    "weasyprint==62.1",
    "markdown==3.5.1",
    "boto3==1.34.0",
    "twilio==8.10.0",
    "cryptography==41.0.7",
    "slowapi==0.1.9",
    "python-dotenv==1.0.0",
    "python-multipart==0.0.6",
    "structlog==23.2.0",
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-mock==3.12.0",
    "httpx==0.27.2",
    "factory-boy==3.3.0",
    "testcontainers==3.7.1",
    "ruff==0.11.8",
    "fastapi-proxiedheadersmiddleware>=0.9.0",
    "firecrawl-py>=2.8.0",
    "pydantic-ai>=0.0.12",
]

[project.urls]
Homepage = "https://github.com/yourusername/jobagent"
Documentation = "https://github.com/yourusername/jobagent/blob/main/README.md"
Repository = "https://github.com/yourusername/jobagent.git"
"Bug Tracker" = "https://github.com/yourusername/jobagent/issues"

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"
backend-path = ["."]

[tool.setuptools.packages.find]
include = ["app*"]
exclude = ["alembic*", "tests*"]

[project.optional-dependencies]
dev = [
    "ty",
    "ipython==8.17.2",
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-mock==3.12.0",
    "httpx==0.27.2"
]

[tool.poe.tasks]
test = "docker compose -f docker-compose.test.yml up --build --abort-on-container-exit"
deploy = "bash deploy.sh"
deploy-check = "flyctl status --app jobagent"
deploy-logs = "flyctl logs --app jobagent"
deploy-ssh = "flyctl ssh console --app jobagent"
logs-local = "docker compose logs -f"
stop-local = "docker compose down"
destroy-local = "docker compose down -v --remove-orphans"
alembic-upgrade = "alembic upgrade head"
alembic-revision = "alembic revision --autogenerate -m"
migrate = "bash migrate.sh"

[tool.poe.tasks.run-local]
shell = """
docker compose up --build -d
echo "⏳ Waiting for services to start..."
sleep 8

# Configure mc alias and create bucket, with retries
echo "🪣 Configuring MinIO client and creating bucket..."
n=0
until [ "$n" -ge 5 ]
do
   # Configure the MinIO client alias inside the container to point to itself
   # The alias 'local' will be used for subsequent commands
   docker compose exec minio mc alias set local http://localhost:9000 minioadmin minioadmin > /dev/null 2>&1
   
   # Attempt to create the bucket using the new alias. The bucket name comes from your .env
   output=$(docker compose exec minio mc mb local/job-agent-documents --ignore-existing 2>&1)
   exit_code=$?
   
   if [ $exit_code -eq 0 ]; then
      echo "✅ MinIO bucket 'job-agent-documents' is ready."
      break
   fi
   
   echo "   Attempt $((n+1)) failed. Retrying in 2s..."
   echo "   Error: $output"
   n=$((n+1))
   sleep 2
done

if [ "$n" -ge 5 ]; then
  echo "❌ Failed to create MinIO bucket after 5 attempts."
fi

echo '🎉 Job Agent running locally!'
echo '📋 Access your services:'
echo '  • API: http://localhost:8000/docs'
echo '  • Health: http://localhost:8000/health'
echo '  • MinIO: http://localhost:9001 (admin/minioadmin)'
echo '📝 View logs: uv run poe logs-local'
echo '🛑 Stop services: uv run poe stop-local'
"""

[tool.pytest.ini_options]
# Suppress external library warnings that we can't control
filterwarnings = [
    "ignore::DeprecationWarning:httpx.*",
    "ignore:The 'app' shortcut is now deprecated:DeprecationWarning",
]
asyncio_mode = "auto"
testpaths = ["tests"]

[dependency-groups]
dev = [
    "poethepoet>=0.34.0",
]

# Optional: Configuration for tools like Ruff, MyPy can also go here
# warn_unused_configs = true
